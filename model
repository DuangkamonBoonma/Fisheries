import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import LabelEncoder
import matplotlib.pyplot as plt

# โหลดข้อมูล (ปรับเส้นทางไฟล์ตามที่อยู่ของข้อมูล)
data = pd.read_csv('output.csv')
print(data.head())

import pandas as pd
from sklearn.preprocessing import LabelEncoder

# ข้อมูลต้นฉบับ
data = [
    "ดอนเมือง, กรุงเทพมหานคร",
    "พระโขนง, กรุงเทพมหานคร",
    "ดอนเมือง, กรุงเทพมหานคร",
    "ทุ่งครุ, กรุงเทพมหานคร",
    "สวนหลวง, กรุงเทพมหานคร",
    "ลาดกระบัง, กรุงเทพมหานคร",
    "จตุจักร, กรุงเทพมหานคร",
    "ภาษีเจริญ, กรุงเทพมหานคร",
    "สวนหลวง, กรุงเทพมหานคร"
]

# แยกเขตและจังหวัด
districts = []
provinces = []

for entry in data:
    district, province = entry.split(", ")
    districts.append(district)
    provinces.append(province)

# สร้าง DataFrame
df = pd.DataFrame({
    'District': districts,
    'Province': provinces
})

# แปลงคอลัมน์ 'Province' เป็นข้อมูลเชิงตัวเลข
label_encoder = LabelEncoder()
df['Province_encoder'] = label_encoder.fit_transform(df['Province'])

# แสดงผล
print(df)

# ข้อมูลราคาที่ให้มา
prices = [2800000, 2200000, 5500000, 3250000, 4200000, 900000, 1800000, 1390000, 6950000]

# ตรวจสอบให้แน่ใจว่าจำนวนราคาตรงกับจำนวนเขต
if len(prices) == len(df):
    df['Price (บาท)'] = prices
else:
    print("จำนวนราคาต้องตรงกับจำนวนเขต!")

# กำหนดตัวแปรอิสระและตัวแปรเป้าหมาย
X = df[['Price (บาท)']]  # ตัวแปรอิสระ 
y = df['Province_encoder']  # ตัวแปรเป้าหมาย 

# แยกข้อมูลเป็นชุดการฝึกและชุดการทดสอบ
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# สร้างโมเดล Linear Regression
model = LinearRegression()
model.fit(X_train, y_train)

# คาดการณ์ผลลัพธ์จากชุดทดสอบ
y_pred = model.predict(X_test)

# ประเมินโมเดล
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')

# แสดงผลลัพธ์กราฟ
plt.scatter(X_test, y_test, color='blue', label='Actual data')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Regression line')
plt.xlabel('Price (บาท)')
plt.ylabel('Province_encoder')
plt.title('Price vs Province Encoder')
plt.legend()
plt.show()

import pickle

# สมมติว่า 'model' คือโมเดล Linear Regression ที่ฝึกเสร็จแล้ว
filename = 'model.pkl'

# บันทึกโมเดลไปที่ดิสก์
with open(filename, 'wb') as file:
    pickle.dump(model, file)
